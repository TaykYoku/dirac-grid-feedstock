{% set name = "dirac-grid" %}
{% set version = "7r0p36" %}
{% set major = version.split('r')[0] %}
{% set minor = version.split('r')[1].split('p')[0] %}
{% set patch = version.split('p')[1] %}

package:
  name: {{ name|lower }}
  version: {{ major }}.{{ minor }}.{{ patch }}

source:
  url: https://github.com/DIRACGrid/DIRAC/archive/v{{ major }}r{{ minor }}p{{ patch }}.tar.gz
  sha256: bd4486ae44ad904971dd727ccf40dd0efb8fc0e565e916b6789c71380704ff53
  patches:
    - 0001-Patch-rootPath-to-be-CONDA_PREFIX.patch

build:
  noarch: python
  number: 0
  script:
    - "{{ PYTHON }} -m pip install . --no-deps -vv"
    - mkdir -p ${PREFIX}/scripts
    - mv "${RECIPE_DIR}/dirac-notebook-proxy-init.py" "${PREFIX}/bin/"
    - mv "${RECIPE_DIR}/testNotebookAuth.py" "${PREFIX}/lib/python2.7/site-packages/DIRAC/FrameworkSystem/private/"
    - find ${PREFIX} -wholename '*/bin/*.py' -exec bash -c 'FN={} && NEW_FN=${PREFIX}/scripts/$(basename ${FN} .py) && cp ${FN} ${NEW_FN} && chmod +x ${NEW_FN}' \;
    - find ${PREFIX} -wholename '*/bin/*.py' -exec bash -c 'FN={} && NEW_FN=${PREFIX}/bin/$(basename ${FN} .py) && cp ${FN} ${NEW_FN} && chmod +x ${NEW_FN}' \;
    - mkdir -p "${PREFIX}/etc/conda/activate.d"
    - cp "${RECIPE_DIR}/activate"* "${PREFIX}/etc/conda/activate.d"
    - mkdir -p "${PREFIX}/etc/conda/deactivate.d"
    - cp "${RECIPE_DIR}/deactivate"* "${PREFIX}/etc/conda/deactivate.d"

requirements:
  host:
    - python =2.7
    - pip
  run:
    - python =2.7
    - m2crypto  # >=0.36
    - certifi
    - elasticsearch-dsl >=6.3.1,<7
    - funcsigs
    - future
    - futures
    - GitPython >=2.1.0
    - matplotlib-base >=2.1.0,<3.0
    - mysqlclient >=1.2.5
    - jinja2
    - numpy >=1.10.1
    - pexpect >=4.0.1
    - psutil >=4.2.0
    - pyasn1 >0.4.1
    - pyasn1-modules
    - pytz >=2015.7
    - requests >=2.9.1
    - simplejson >=3.8.1
    - six >=1.10
    - sqlalchemy >=1.0.9
    - stomp.py >=3.1.5
    - suds-jurko >=0.6
    - python-json-logger >=0.1.8
    - tornado >=5.0.0,<6.0.0
    - cmreshandler >1.0.0b4
    - rst2pdf >=0.93
    - multi-mechanize >=1.2.0
    - subprocess32
    - asn1
    - fts-rest

test:
  imports:
    - DIRAC
  commands:
    - dirac-jobexec.py --help
    - $CONDA_PREFIX/scripts/dirac-jobexec --help

about:
  home: http://diracgrid.org
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: 'Distributed Infrastructure with Remote Agent Control'
  description: |
    DIRAC (Distributed Infrastructure with Remote Agent Control) INTERWARE is a
    software framework for distributed computing providing a complete solution
    to one or more user community requiring access to distributed resources.
    DIRAC builds a layer between the users and the resources offering a common
    interface to a number of heterogeneous providers, integrating them in a
    seamless manner, providing interoperability, at the same time as an
    optimized, transparent and reliable usage of the resources.

    DIRAC has been started by the LHCb collaboration who still maintains it. It
    is now used by several communities (AKA VO=Virtual Organizations) for their
    distributed computing workflows.
  doc_url: https://dirac.readthedocs.io/
  dev_url: https://github.com/DIRACGrid/DIRAC

extra:
  recipe-maintainers:
    - chrisburr
